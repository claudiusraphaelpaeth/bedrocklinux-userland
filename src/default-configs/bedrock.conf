# Bedrock Linux configuration file
#
# This is largely in ini-format.
# - both "#" and ";" work as comments
# - lines ending in backslash are continued
# - sections in square brackets
# - values which are lists are comma separated

[general]
#
# The Olson timezone.  For example,
#
#     timezone = America/New_York
#
# At least one stratum should provide an Olson database file at
#
#     /usr/share/zoneinfo/<timezone>
#
# For example, for America/New_York there should be a file at
#
#     /usr/share/zoneinfo/America/New_York
#
timezone =

#
# The preferred POSIX LANG value.
#
language =

[init]
#
# Bedrock Linux provides its own init.  This sets up bedrock subsystems then
# hands control over to a user-selected init provided by some stratum.
#

#
# Number of seconds to wait for an init to be input before automatically
# selecting the default value.
#
timeout = 30

#
# Init to utilize by default if timeout expires.  Format is
#
#     default = <stratum>:<path>
#
# For example, to use void's /sbin/init, use:
#
#     default = void:/sbin/init
#
default =

#
# A comma separated list of (stratum-local) file paths which may provide an
# init.  The Bedrock init menu will list every available one from every
# (unignored) stratum.
#
paths = /sbin/init, /sbin/openrc-init, /sbin/runit-init, /sbin/fallback-init, \
	/lib/systemd/systemd, /usr/lib/systemd/systemd

[global]
#
# Conceptually, Bedrock Linux categorizes every file path on the system as
# either:
#
# - Local to a given stratum.  Multiple instances are needed of such files to
# avoid conflicts between the strata.
# - Global across all strata.  There is only one instance of such a file
# irrelevant of the number of strata.
#
# For example: both Debian and Ubuntu have package managers that read
# /etc/apt/sources.list, and each needs to see something different there.
# Thus, the /etc/apt/sources.list file path should be local to each stratum.
# However, all processes should see the same contents in /home, and thus /home
# is global.
#
# By default, all files are local.  The following settings are used to indicate
# which files should be global.  Different contexts require different systems
# for marking a file path as global.
#

#
# A list of directories which should be global.  If something is
# mounted into one of these directories, that new mount point
# is also global.
#
share = /proc, /sys, /dev, /home, /root, /lib/modules, /tmp, /var/tmp, /mnt, \
	/media, /run

#
# Another list of directories which should be global.  Anything mounted in them
# is local by default.  These are primarily used to avoid recursion in nested
# cases.  Given that nesting is expected, be careful with order.
#
bind = /bedrock, /bedrock/cross, /bedrock/run

#
# A list of files and directories within /etc which should be global.  /etc
# must be treated specially, as the techniques used for share and bind do not
# work for files in it.
#
etc = profile, hostname, hosts, passwd, group, shadow, sudoers, resolv.conf, \
	machine-id, rc.local, adjtime, fstab, modprobe.d/blacklist.conf

[env-vars]
#
# Many programs search environment variables consisting of a colon-separated
# list of directories.  We can use these to teach these programs about
# cross-stratum content.
#
# Generally, the fields fall into three categories, which should be in the
# following order:
#
# - The file must come from a specific stratum.
#     - For example, `reboot` should be provided by the stratum providing the
#     current init.
#     - Typically, these are provided by `/bedrock/cross/pin/[...]`.
# - The file must come from the local stratum.
#     - Bedrock Linux assumes strata are self-sufficient in terms of hard
#     dependencies.  Thus, if something has a hard dependency on a given file
#     that file *must* be available locally.
#     - For example, if a given distro's `/bin/sh` is provided by bash, that
#     distro's scripts may use bash-isms, and thus another distro's `/bin/sh`
#     may be unsuitable.
#     - Typically these values are the traditional values of the given
#     environment variable.
# - The file may come from any stratum.
#     - If the above two categories don't apply, we know the program isn't
#     picky about the specific version of the given file, and thus any distro
#     may provide it.
#     - Typically, these are provided by `/bedrock/cross/[...]`.
#

#
# A list of directories searched by various programs to find executables.
#
PATH = /bedrock/cross/pin/bin:/bedrock/cross/pin/sbin:/bedrock/bin:\
	/usr/local/sbin:/usr/local/bin:/opt/sbin:/opt/bin:/usr/sbin:\
	/usr/bin:/sbin:/bin:/bedrock/cross/sbin:/bedrock/cross/bin

#
# A list of directories searched by the man executable to find documentation.
#
MANPATH = /bedrock/share/man:/usr/local/share/man:/usr/share/man:\
	/bedrock/cross/man

#
# A list of directories searched by the info executable to find documentation.
#
INFOPATH = /bedrock/share/info:/usr/local/share/info:/usr/share/info:\
	/bedrock/cross/info

#
# A list of directories used by the freedesktop.org standard containing things
# such as icons and application descriptions.
#
XDG_DATA_DIRS = /usr/local/share:/usr/share:/bedrock/cross/

[cross]
#
# Typical Bedrock Linux systems mount a virtual filesystem at
#
#     /bedrock/cross
#
# which provides an alternative view of various files from the enabled strata.
# This view is used for cross-stratum coordination.
#
# For the [cross-*] sections below, the keys represent file paths appended to
# /bedrock/cross, and the values are a list of files or directories to be
# searched for contents for the given file path.  For example,
#
#     man = /usr/local/share/man, /usr/share/man
#
# indicates that /bedrock/cross/man should be populated with the contents of
# the /usr/local/share/man and /usr/share/man directories of all of the enabled
# strata.
#
# The paths used for values may be prefixed by "<stratum>:" indicating the
# given file/directory should only be considered from a specific stratum.  For
# example,
#
#     pin/bin/firefox = arch:/usr/bin/firefox, void:/usr/bin/firefox
#
# Indicates a file at /bedrock/cross/pin/bin/firefox should be provided by
# arch if available, or if not then void; otherwise, the file should not exist.

#
# If a key does not have a stratum prefixed, it may be provided by any stratum
# that has the file.  If multiple do, the values in "priority" below indicate
# which should be given priority.  Any enabled strata left unspecified are
# implicitly appended at the end in an unspecified order.  For example,
#
#     priority = gentoo, debian
#
# indicates that for the `man` example above, if gentoo provides the given man
# page, gentoo's version should be provided.  Otherwise, if debian does, then
# debian's should be provided.  Otherwise, any stratum that provides the man
# page may provide it.
#
priority =

[cross-pass]
#
# Files accessed here as passed through from the stratum's version unaltered.
#
man      = /bedrock/share/man, /usr/local/share/man, /usr/share/man
info     = /bedrock/share/info, /usr/local/share/info, /usr/share/info
icons    = /usr/local/share/icons, /usr/share/icons
zoneinfo = /usr/share/zoneinfo

[cross-bin]
#
# Files are executables.  Executing these files should implicitly redirect
# through `strat <stratum>`.
#
bin  = /usr/local/bin, /opt/bin, /usr/bin, /bin
sbin = /usr/local/sbin, /opt/sbin, /usr/sbin, /sbin

pin/bin/systemctl   = init:/usr/sbin/systemctl,  init:/usr/bin/systemctl,  init:/sbin/systemctl,  init:/bin/systemctl
pin/bin/rc-service  = init:/usr/sbin/rc-service, init:/usr/bin/rc-service, init:/sbin/rc-service, init:/bin/rc-service
pin/bin/rc-status   = init:/usr/sbin/rc-status,  init:/usr/bin/rc-status,  init:/sbin/rc-status,  init:/bin/rc-status
pin/bin/rc-update   = init:/usr/sbin/rc-update,  init:/usr/bin/rc-update,  init:/sbin/rc-update,  init:/bin/rc-update
pin/bin/rc-udevadm  = init:/usr/sbin/rc-udevadm, init:/usr/bin/rc-udevadm, init:/sbin/rc-udevadm, init:/bin/rc-udevadm
pin/bin/sv          = init:/usr/sbin/sv,         init:/usr/bin/sv,         init:/sbin/sv,         init:/bin/sv

pin/bin/poweroff    = init:/usr/sbin/poweroff,  init:/sbin/poweroff, init:/usr/bin/poweroff, init:/bin/poweroff
pin/bin/reboot      = init:/usr/sbin/reboot,    init:/sbin/reboot,   init:/usr/bin/reboot,   init:/bin/reboot
pin/bin/shutdown    = init:/usr/sbin/shutdown,  init:/sbin/shutdown, init:/usr/bin/shutdown, init:/bin/shutdown
pin/bin/halt        = init:/usr/sbin/halt,      init:/sbin/halt,     init:/usr/bin/halt,     init:/bin/halt

[cross-ini]
#
# Files are in ini format.  Any keys which contain "Exec" should have their
# values altered to redirect through `strat <stratum>`.
#
applications = /usr/local/share/applications, /usr/share/applications
xsessions    = init:/usr/local/share/xsessions, init:/usr/share/xsessions, \
	/usr/local/share/xsessions, /usr/share/xsessions
dbus-system  = /usr/share/dbus-1/system-services
dbus-session = /usr/share/dbus-1/services

[cross-font]
#
# Values are font directories.  Fonts are passed through, and font databases
# are merged to list all fonts.
#
fonts = /usr/share/fonts
